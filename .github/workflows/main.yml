# GitHub Actions workflow for the secure, serverless Azure Resume project.
# This pipeline automates the deployment of infrastructure and application code.

name: Deploy Hybrid Azure Resume

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  # Set the name of the resource group you created in Azure
  AZURE_RESOURCE_GROUP: 'AzureResumeRG'
  # Set the Azure region for deployment
  AZURE_LOCATION: 'eastus2'

jobs:
  deploy-infrastructure:
    name: 'Deploy Infrastructure'
    runs-on: ubuntu-latest
    
    outputs:
      # Pass resource names to the next job
      functionAppName: ${{ steps.deployBicep.outputs.functionAppName }}
      storageAccountName: ${{ steps.deployBicep.outputs.storageAccountName }}

    steps:
    - name: 'Checkout Repository'
      uses: actions/checkout@v3

    - name: 'Log in to Azure'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Get Service Principal Object ID'
      id: getSpObjectId
      uses: azure/CLI@v1
      with:
        inlineScript: |
          CLIENT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .clientId)
          SP_OBJECT_ID=$(az ad sp show --id $CLIENT_ID --query id --output tsv)
          echo "spObjectId=$SP_OBJECT_ID" >> $GITHUB_OUTPUT

    - name: 'Deploy Bicep Template'
      id: deployBicep
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP }}
        template: ./infrastructure/main.bicep
        parameters: 'location=${{ env.AZURE_LOCATION }} githubSpObjectId=${{ steps.getSpObjectId.outputs.spObjectId }}'
        failOnStdErr: false

    - name: 'Enable Static Website Hosting on Storage Account'
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az storage blob service-properties update \
            --account-name ${{ steps.deployBicep.outputs.storageAccountName }} \
            --static-website \
            --index-document index.html \
            --error-document index.html

  deploy-application:
    name: 'Deploy Application Code'
    runs-on: ubuntu-latest
    needs: deploy-infrastructure 

    steps:
    - name: 'Checkout Repository'
      uses: actions/checkout@v3

    - name: 'Log in to Azure'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Setup Python 3.9'
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: 'Install Dependencies and Run Tests'
      run: |
        cd backend
        pip install -r requirements.txt
        pytest tests/

    - name: 'Deploy Backend to Function App'
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ needs.deploy-infrastructure.outputs.functionAppName }}
        package: './backend'

    - name: 'Deploy Frontend to Blob Storage'
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az storage blob upload-batch \
            --account-name ${{ needs.deploy-infrastructure.outputs.storageAccountName }} \
            --source ./frontend \
            --destination '$web' \
            --overwrite