name: Build and Deploy Streamlined Azure Resume

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  RESOURCE_GROUP_NAME: 'MyBicepRG'
  LOCATION: 'eastus2'
  # These are placeholders for now. The Bicep deployment will create the resources.
  # We will fill these in after the first successful infrastructure deployment.
  FUNCTION_APP_NAME: 'resume4kx33andhgam6-func'
  STORAGE_ACCOUNT_NAME: 'bicepdemo4kx33andhgam6'
  #CDN_PROFILE_NAME: 'YOUR_CDN_PROFILE_NAME'
  #CDN_ENDPOINT_NAME: 'YOUR_CDN_ENDPOINT_NAME'


jobs:
  build-and-test:
    name: Build & Test Application
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies and run tests
      run: |
        cd backend
        pip install -r requirements.txt
        pytest tests/

  deploy-infra:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
    - uses: actions/checkout@v3
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Deploy Bicep File
      id: deployBicep
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
        template: ./infrastructure/main.bicep
        parameters: 'location=${{ env.LOCATION }} storageAccountName=${{ env.STORAGE_ACCOUNT_NAME }}'
    - name: Enable Static Website Hosting
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az storage blob service-properties update \
            --account-name ${{ env.STORAGE_ACCOUNT_NAME }} \
            --static-website \
            --index-document index.html \
            --404-document index.html
    - name: Assign Cosmos DB Role to Function App
      uses: azure/CLI@v1
      with:
        inlineScript: |
          echo "Waiting for managed identity to propagate..."
          sleep 30

          PRINCIPAL_ID=$(az functionapp identity show --name ${{ env.FUNCTION_APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP_NAME }} --query principalId -o tsv)
          COSMOS_ID='${{ steps.deployBicep.outputs.cosmosDbAccountId }}'

          az role assignment create \
            --assignee-object-id $PRINCIPAL_ID \
            --assignee-principal-type ServicePrincipal \
            --role "Cosmos DB Data Contributor" \
            --scope $COSMOS_ID
  deploy-app:
    name: Deploy Application Code
    runs-on: ubuntu-latest
    needs: deploy-infra
    steps:
    - uses: actions/checkout@v3
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Create Zip Package for Deployment
      run: |
        cd backend
        zip -r ../deployment.zip .

    - name: Deploy Function App via Azure CLI
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az functionapp deployment source config-zip \
            --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
            --name ${{ env.FUNCTION_APP_NAME }} \
            --src ./deployment.zip

    - name: Deploy Frontend to Blob Storage
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az storage blob upload-batch --account-name ${{ env.STORAGE_ACCOUNT_NAME }} -d '$web' -s './frontend' --overwrite
    
    #- name: Purge CDN Endpoint
    #  uses: azure/CLI@v1
    #  with:
    #    inlineScript: |
    #      az cdn endpoint purge --content-paths "/*" --profile-name ${{ env.CDN_PROFILE_NAME }} --name ${{ env.CDN_ENDPOINT_NAME }} --resource-group ${{ env.RESOURCE_GROUP_NAME }}